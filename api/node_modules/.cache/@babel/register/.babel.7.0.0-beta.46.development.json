{
  "{\"sourceRoot\":\"C:\\\\Users\\\\dwiseman42\\\\pinfo api\",\"cwd\":\"C:\\\\Users\\\\dwiseman42\\\\pinfo api\",\"filename\":\"C:\\\\Users\\\\dwiseman42\\\\pinfo api\\\\server.js\",\"babelrc\":false,\"envName\":\"development\",\"passPerPreset\":false,\"plugins\":[],\"presets\":[]}:7.0.0-beta.46": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\dwiseman42\\pinfo api",
      "cwd": "C:\\Users\\dwiseman42\\pinfo api",
      "filename": "C:\\Users\\dwiseman42\\pinfo api\\server.js",
      "babelrc": false,
      "envName": "development",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\dwiseman42\\pinfo api\\server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\dwiseman42\\pinfo api\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\dwiseman42\\pinfo api",
        "sourceFileName": "C:\\Users\\dwiseman42\\pinfo api\\server.js"
      }
    },
    "ast": null,
    "code": "/*const express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst bcrypt = require('bcrypt-nodejs');\r\nconst cors = require('cors');\r\nconst knex = require('knex');\r\nconst corsPrefetch = require('cors-prefetch-middleware');\r\nconst imagesUpload = require('images-upload-middleware');\r\n\r\n\r\nconst register = require('./controllers/register');\r\nconst signin = require('./controllers/signin');\r\nconst profile = require('./controllers/profile');\r\nconst image = require('./controllers/image');\r\n\r\nconst db = knex({\r\n  client: 'pg',\r\n  connection: {\r\n    host : '127.0.0.1',\r\n    user : 'postgres',\r\n    password : '209145',\r\n    database : 'pinfo'\r\n  }\r\n});\r\n\r\n\r\nconst app = express();\r\n\r\napp.use(bodyParser.json());\r\napp.use(cors());\r\n\r\napp.use('/static', express.static('./server/static'));\r\n \r\napp.use(corsPrefetch);\r\n \r\napp.post('/multiple', imagesUpload(\r\n    './server/static/multipleFiles',\r\n    'http://localhost:9090/static/multipleFiles',\r\n    true\r\n));\r\n \r\napp.post('/notmultiple', imagesUpload(\r\n    './server/static/files',\r\n    'http://localhost:9090/static/files'\r\n));\r\n \r\napp.listen(9090, () => {\r\n    console.log('Listen: 9090');\r\n});\r\n\r\napp.get('/', (req,res)=> {\r\n\tres.send(database.users);\r\n})\r\n\r\napp.post('/signin', (req, res) => { signin.handleSignIn(req, res, db, bcrypt) })\r\n\r\napp.post('/register', (req, res) => { register.handleRegister(req, res, db, bcrypt) })\r\n\r\napp.get('/profile/:id', (req, res) => { profile.handleProfileGet(req, res, db) })\r\n\r\napp.put('/image', (req, res) => { image.handleImage(req, res, db) })\r\n\r\n\r\n\r\napp.listen(3000, ()=> {\r\n\tconsole.log('app is running');\r\n})*/\nimport express from 'express';\nimport corsPrefetch from 'cors-prefetch-middleware';\nimport imagesUpload from 'images-upload-middleware';\nconst app = express();\napp.use('/static', express.static('./server/static'));\napp.use(corsPrefetch);\napp.post('/multiple', imagesUpload('./server/static/multipleFiles', 'http://localhost:9090/static/multipleFiles', true));\napp.post('/notmultiple', imagesUpload('./server/static/files', 'http://localhost:9090/static/files'));\napp.listen(9090, () => {\n  console.log('Listen: 9090');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZHdpc2VtYW40MlxccGluZm8gYXBpXFxzZXJ2ZXIuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsImNvcnNQcmVmZXRjaCIsImltYWdlc1VwbG9hZCIsImFwcCIsInVzZSIsInN0YXRpYyIsInBvc3QiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBb0VBLE9BQU9BLE9BQVAsTUFBb0IsU0FBcEI7QUFDQSxPQUFPQyxZQUFQLE1BQXlCLDBCQUF6QjtBQUNBLE9BQU9DLFlBQVAsTUFBeUIsMEJBQXpCO0FBR0EsTUFBTUMsTUFBTUgsU0FBWjtBQUVBRyxJQUFJQyxHQUFKLENBQVEsU0FBUixFQUFtQkosUUFBUUssTUFBUixDQUFlLGlCQUFmLENBQW5CO0FBRUFGLElBQUlDLEdBQUosQ0FBUUgsWUFBUjtBQUVBRSxJQUFJRyxJQUFKLENBQVMsV0FBVCxFQUFzQkosYUFDbEIsK0JBRGtCLEVBRWxCLDRDQUZrQixFQUdsQixJQUhrQixDQUF0QjtBQU1BQyxJQUFJRyxJQUFKLENBQVMsY0FBVCxFQUF5QkosYUFDckIsdUJBRHFCLEVBRXJCLG9DQUZxQixDQUF6QjtBQUtBQyxJQUFJSSxNQUFKLENBQVcsSUFBWCxFQUFpQixNQUFNO0FBQ25CQyxVQUFRQyxHQUFSLENBQVksY0FBWjtBQUNILENBRkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxkd2lzZW1hbjQyXFxwaW5mbyBhcGkiLCJzb3VyY2VzQ29udGVudCI6WyIvKmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xyXG5jb25zdCBiY3J5cHQgPSByZXF1aXJlKCdiY3J5cHQtbm9kZWpzJyk7XHJcbmNvbnN0IGNvcnMgPSByZXF1aXJlKCdjb3JzJyk7XHJcbmNvbnN0IGtuZXggPSByZXF1aXJlKCdrbmV4Jyk7XHJcbmNvbnN0IGNvcnNQcmVmZXRjaCA9IHJlcXVpcmUoJ2NvcnMtcHJlZmV0Y2gtbWlkZGxld2FyZScpO1xyXG5jb25zdCBpbWFnZXNVcGxvYWQgPSByZXF1aXJlKCdpbWFnZXMtdXBsb2FkLW1pZGRsZXdhcmUnKTtcclxuXHJcblxyXG5jb25zdCByZWdpc3RlciA9IHJlcXVpcmUoJy4vY29udHJvbGxlcnMvcmVnaXN0ZXInKTtcclxuY29uc3Qgc2lnbmluID0gcmVxdWlyZSgnLi9jb250cm9sbGVycy9zaWduaW4nKTtcclxuY29uc3QgcHJvZmlsZSA9IHJlcXVpcmUoJy4vY29udHJvbGxlcnMvcHJvZmlsZScpO1xyXG5jb25zdCBpbWFnZSA9IHJlcXVpcmUoJy4vY29udHJvbGxlcnMvaW1hZ2UnKTtcclxuXHJcbmNvbnN0IGRiID0ga25leCh7XHJcbiAgY2xpZW50OiAncGcnLFxyXG4gIGNvbm5lY3Rpb246IHtcclxuICAgIGhvc3QgOiAnMTI3LjAuMC4xJyxcclxuICAgIHVzZXIgOiAncG9zdGdyZXMnLFxyXG4gICAgcGFzc3dvcmQgOiAnMjA5MTQ1JyxcclxuICAgIGRhdGFiYXNlIDogJ3BpbmZvJ1xyXG4gIH1cclxufSk7XHJcblxyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5cclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcbmFwcC51c2UoY29ycygpKTtcclxuXHJcbmFwcC51c2UoJy9zdGF0aWMnLCBleHByZXNzLnN0YXRpYygnLi9zZXJ2ZXIvc3RhdGljJykpO1xyXG4gXHJcbmFwcC51c2UoY29yc1ByZWZldGNoKTtcclxuIFxyXG5hcHAucG9zdCgnL211bHRpcGxlJywgaW1hZ2VzVXBsb2FkKFxyXG4gICAgJy4vc2VydmVyL3N0YXRpYy9tdWx0aXBsZUZpbGVzJyxcclxuICAgICdodHRwOi8vbG9jYWxob3N0OjkwOTAvc3RhdGljL211bHRpcGxlRmlsZXMnLFxyXG4gICAgdHJ1ZVxyXG4pKTtcclxuIFxyXG5hcHAucG9zdCgnL25vdG11bHRpcGxlJywgaW1hZ2VzVXBsb2FkKFxyXG4gICAgJy4vc2VydmVyL3N0YXRpYy9maWxlcycsXHJcbiAgICAnaHR0cDovL2xvY2FsaG9zdDo5MDkwL3N0YXRpYy9maWxlcydcclxuKSk7XHJcbiBcclxuYXBwLmxpc3Rlbig5MDkwLCAoKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZygnTGlzdGVuOiA5MDkwJyk7XHJcbn0pO1xyXG5cclxuYXBwLmdldCgnLycsIChyZXEscmVzKT0+IHtcclxuXHRyZXMuc2VuZChkYXRhYmFzZS51c2Vycyk7XHJcbn0pXHJcblxyXG5hcHAucG9zdCgnL3NpZ25pbicsIChyZXEsIHJlcykgPT4geyBzaWduaW4uaGFuZGxlU2lnbkluKHJlcSwgcmVzLCBkYiwgYmNyeXB0KSB9KVxyXG5cclxuYXBwLnBvc3QoJy9yZWdpc3RlcicsIChyZXEsIHJlcykgPT4geyByZWdpc3Rlci5oYW5kbGVSZWdpc3RlcihyZXEsIHJlcywgZGIsIGJjcnlwdCkgfSlcclxuXHJcbmFwcC5nZXQoJy9wcm9maWxlLzppZCcsIChyZXEsIHJlcykgPT4geyBwcm9maWxlLmhhbmRsZVByb2ZpbGVHZXQocmVxLCByZXMsIGRiKSB9KVxyXG5cclxuYXBwLnB1dCgnL2ltYWdlJywgKHJlcSwgcmVzKSA9PiB7IGltYWdlLmhhbmRsZUltYWdlKHJlcSwgcmVzLCBkYikgfSlcclxuXHJcblxyXG5cclxuYXBwLmxpc3RlbigzMDAwLCAoKT0+IHtcclxuXHRjb25zb2xlLmxvZygnYXBwIGlzIHJ1bm5pbmcnKTtcclxufSkqL1xyXG5cclxuXHJcbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgY29yc1ByZWZldGNoIGZyb20gJ2NvcnMtcHJlZmV0Y2gtbWlkZGxld2FyZSc7XHJcbmltcG9ydCBpbWFnZXNVcGxvYWQgZnJvbSAnaW1hZ2VzLXVwbG9hZC1taWRkbGV3YXJlJztcclxuXHJcbiBcclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG4gXHJcbmFwcC51c2UoJy9zdGF0aWMnLCBleHByZXNzLnN0YXRpYygnLi9zZXJ2ZXIvc3RhdGljJykpO1xyXG4gXHJcbmFwcC51c2UoY29yc1ByZWZldGNoKTtcclxuIFxyXG5hcHAucG9zdCgnL211bHRpcGxlJywgaW1hZ2VzVXBsb2FkKFxyXG4gICAgJy4vc2VydmVyL3N0YXRpYy9tdWx0aXBsZUZpbGVzJyxcclxuICAgICdodHRwOi8vbG9jYWxob3N0OjkwOTAvc3RhdGljL211bHRpcGxlRmlsZXMnLFxyXG4gICAgdHJ1ZVxyXG4pKTtcclxuIFxyXG5hcHAucG9zdCgnL25vdG11bHRpcGxlJywgaW1hZ2VzVXBsb2FkKFxyXG4gICAgJy4vc2VydmVyL3N0YXRpYy9maWxlcycsXHJcbiAgICAnaHR0cDovL2xvY2FsaG9zdDo5MDkwL3N0YXRpYy9maWxlcydcclxuKSk7XHJcbiBcclxuYXBwLmxpc3Rlbig5MDkwLCAoKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZygnTGlzdGVuOiA5MDkwJyk7XHJcbn0pOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "C:\\Users\\dwiseman42\\pinfo api\\server.js"
      ],
      "names": [
        "express",
        "corsPrefetch",
        "imagesUpload",
        "app",
        "use",
        "static",
        "post",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAGA,MAAMC,MAAMH,SAAZ;AAEAG,IAAIC,GAAJ,CAAQ,SAAR,EAAmBJ,QAAQK,MAAR,CAAe,iBAAf,CAAnB;AAEAF,IAAIC,GAAJ,CAAQH,YAAR;AAEAE,IAAIG,IAAJ,CAAS,WAAT,EAAsBJ,aAClB,+BADkB,EAElB,4CAFkB,EAGlB,IAHkB,CAAtB;AAMAC,IAAIG,IAAJ,CAAS,cAAT,EAAyBJ,aACrB,uBADqB,EAErB,oCAFqB,CAAzB;AAKAC,IAAII,MAAJ,CAAW,IAAX,EAAiB,MAAM;AACnBC,UAAQC,GAAR,CAAY,cAAZ;AACH,CAFD",
      "sourceRoot": "C:\\Users\\dwiseman42\\pinfo api",
      "sourcesContent": [
        "/*const express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst bcrypt = require('bcrypt-nodejs');\r\nconst cors = require('cors');\r\nconst knex = require('knex');\r\nconst corsPrefetch = require('cors-prefetch-middleware');\r\nconst imagesUpload = require('images-upload-middleware');\r\n\r\n\r\nconst register = require('./controllers/register');\r\nconst signin = require('./controllers/signin');\r\nconst profile = require('./controllers/profile');\r\nconst image = require('./controllers/image');\r\n\r\nconst db = knex({\r\n  client: 'pg',\r\n  connection: {\r\n    host : '127.0.0.1',\r\n    user : 'postgres',\r\n    password : '209145',\r\n    database : 'pinfo'\r\n  }\r\n});\r\n\r\n\r\nconst app = express();\r\n\r\napp.use(bodyParser.json());\r\napp.use(cors());\r\n\r\napp.use('/static', express.static('./server/static'));\r\n \r\napp.use(corsPrefetch);\r\n \r\napp.post('/multiple', imagesUpload(\r\n    './server/static/multipleFiles',\r\n    'http://localhost:9090/static/multipleFiles',\r\n    true\r\n));\r\n \r\napp.post('/notmultiple', imagesUpload(\r\n    './server/static/files',\r\n    'http://localhost:9090/static/files'\r\n));\r\n \r\napp.listen(9090, () => {\r\n    console.log('Listen: 9090');\r\n});\r\n\r\napp.get('/', (req,res)=> {\r\n\tres.send(database.users);\r\n})\r\n\r\napp.post('/signin', (req, res) => { signin.handleSignIn(req, res, db, bcrypt) })\r\n\r\napp.post('/register', (req, res) => { register.handleRegister(req, res, db, bcrypt) })\r\n\r\napp.get('/profile/:id', (req, res) => { profile.handleProfileGet(req, res, db) })\r\n\r\napp.put('/image', (req, res) => { image.handleImage(req, res, db) })\r\n\r\n\r\n\r\napp.listen(3000, ()=> {\r\n\tconsole.log('app is running');\r\n})*/\r\n\r\n\r\nimport express from 'express';\r\nimport corsPrefetch from 'cors-prefetch-middleware';\r\nimport imagesUpload from 'images-upload-middleware';\r\n\r\n \r\nconst app = express();\r\n \r\napp.use('/static', express.static('./server/static'));\r\n \r\napp.use(corsPrefetch);\r\n \r\napp.post('/multiple', imagesUpload(\r\n    './server/static/multipleFiles',\r\n    'http://localhost:9090/static/multipleFiles',\r\n    true\r\n));\r\n \r\napp.post('/notmultiple', imagesUpload(\r\n    './server/static/files',\r\n    'http://localhost:9090/static/files'\r\n));\r\n \r\napp.listen(9090, () => {\r\n    console.log('Listen: 9090');\r\n});"
      ]
    },
    "sourceType": "module",
    "mtime": 1525213160641
  }
}